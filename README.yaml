---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: terraform-yaml-config

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Copyrights
copyrights:
  - name: "Cloud Posse, LLC"
    url: "https://cloudposse.com"
    year: "2020"

# Canonical GitHub repo
github_repo: cloudposse/terraform-yaml-config

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/cloudposse/terraform-yaml-config.svg"
    url: "https://github.com/cloudposse/terraform-yaml-config/releases/latest"
  - name: "Slack Community"
    image: "https://slack.cloudposse.com/badge.svg"
    url: "https://slack.cloudposse.com"

categories:
  - config
  - configuration
  - configuration-management
  - configuration-files
  - yaml
  - yaml-config
  - yaml-files
  - yaml-configuration
  - terraform
  - terraform-module
  - terraform-list
  - terraform-map
  - account

# List any related terraform modules that this module may be used with or that this module depends on.
related:
  - name: "terraform-datadog-monitor"
    description: "Terraform module to configure and provision Datadog monitors from a YAML configuration, complete with automated tests."
    url: "https://github.com/cloudposse/terraform-datadog-monitor"
  - name: "terraform-opsgenie-incident-management"
    description: "Terraform module to provision Opsgenie resources from YAML configurations using the Opsgenie provider, complete with automated tests."
    url: "https://github.com/cloudposse/terraform-opsgenie-incident-management"
  - name: "terraform-aws-components"
    description: "Catalog of reusable Terraform components and blueprints for provisioning reference architectures."
    url: "https://github.com/cloudposse/terraform-aws-components"
  - name: "reference-architectures"
    description: "Get up and running quickly with one of our reference architecture using our fully automated cold-start process."
    url: "https://github.com/cloudposse/reference-architectures"

# List any resources helpful for someone to get started. For example, link to the hashicorp documentation or AWS documentation.
references:
  - name: "Terraform Standard Module Structure"
    description: "HashiCorp's standard module structure is a file and directory layout we recommend for reusable modules distributed in separate repositories."
    url: "https://www.terraform.io/docs/modules/index.html#standard-module-structure"
  - name: "Terraform Module Requirements"
    description: "HashiCorp's guidance on all the requirements for publishing a module. Meeting the requirements for publishing a module is extremely easy."
    url: "https://www.terraform.io/docs/registry/modules/publish.html#requirements"
  - name: "Terraform Version Pinning"
    description: "The required_version setting can be used to constrain which versions of the Terraform CLI can be used with your configuration."
    url: "https://www.terraform.io/docs/configuration/terraform.html#specifying-a-required-terraform-version"
  - name: "Terraform `templatefile` Function"
    description: "`templatefile` reads the file at the given path and renders its content as a template using a supplied set of template variables."
    url: "https://www.terraform.io/docs/configuration/functions/templatefile.html"
  - name: "Terraform `template_file` data source"
    description: "The `template_file` data source renders a template from a template string, which is usually loaded from an external file."
    url: "https://registry.terraform.io/providers/hashicorp/template/latest/docs/data-sources/file"

# Short description of this project
description: |-
  Terraform module to convert local and remote YAML configuration templates into Terraform lists and maps.

# Introduction to the project
introduction: |-
  The module accepts paths to local and remote YAML configuration template files
  and converts the templates into Terraform lists and maps for consumption in other Terraform modules.

  The module also accepts a map of parameters for interpolation within the YAML config templates.

# How to use this module. Should be an easy example to copy and paste.
usage: |-
  For a complete example, see [examples/complete](examples/complete).

  For automated tests of the complete example using [bats](https://github.com/bats-core/bats-core) and [Terratest](https://github.com/gruntwork-io/terratest)
  (which tests and deploys the example on Datadog), see [test](test).


  ```hcl
  module "yaml_config" {
    source = "git::https://github.com/cloudposse/terraform-yaml-config.git?ref=master"

    map_config_local_base_path = path.cwd

    map_config_paths = [
      "config/map-configs/*.yaml",
      "https://raw.githubusercontent.com/cloudposse/terraform-opsgenie-incident-management/master/examples/config/resources/services.yaml",
      "https://raw.githubusercontent.com/cloudposse/terraform-opsgenie-incident-management/master/examples/config/resources/team_routing_rules.yaml"
    ]

    list_config_local_base_path = path.cwd

    list_config_paths = [
      "config/list-configs/*.yaml",
      "https://raw.githubusercontent.com/cloudposse/terraform-aws-service-control-policies/master/examples/complete/policies/organization-policies.yaml"
    ]

    parameters = {
      param1 = "1"
      param2 = "2"
    }

    context = module.this.context
  }
  ```

# Example usage
examples: |-
  Review the [complete example](examples/complete) to see how to use this module.

# How to get started quickly
#quickstart: |-
#  Here's how to get started...

# Other files to include in this README from the project folder
include:
  - "docs/targets.md"
  - "docs/terraform.md"

# Contributors to this project
contributors:
  - name: "Erik Osterman"
    github: "osterman"
  - name: "Andriy Knysh"
    github: "aknysh"
